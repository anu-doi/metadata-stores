package au.edu.anu.metadatastores.datamodel.store;

// Generated 27/02/2013 10:39:19 AM by Hibernate Tools 4.0.0

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * PotentialRelation generated by hbm2java
 */
@Entity
@Table(name = "potential_relation", schema = "public")
public class PotentialRelation implements java.io.Serializable {
	private static final long serialVersionUID = 1L;
	
	private PotentialRelationId id;
	private Item itemByIid;
	private Item itemByRelatedIid;
	private Boolean requireCheck;
	private Boolean isLink;

	public PotentialRelation() {
	}

	public PotentialRelation(PotentialRelationId id, Item itemByIid,
			Item itemByRelatedIid, boolean requireCheck) {
		this.id = id;
		this.itemByIid = itemByIid;
		this.itemByRelatedIid = itemByRelatedIid;
		this.requireCheck = requireCheck;
	}

	public PotentialRelation(PotentialRelationId id, Item itemByIid,
			Item itemByRelatedIid, boolean requireCheck, Boolean isLink) {
		this.id = id;
		this.itemByIid = itemByIid;
		this.itemByRelatedIid = itemByRelatedIid;
		this.requireCheck = requireCheck;
		this.isLink = isLink;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "iid", column = @Column(name = "iid", nullable = false)),
			@AttributeOverride(name = "relationValue", column = @Column(name = "relation_value", nullable = false)),
			@AttributeOverride(name = "relatedIid", column = @Column(name = "related_iid", nullable = false)) })
	public PotentialRelationId getId() {
		return this.id;
	}

	public void setId(PotentialRelationId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "iid", nullable = false, insertable = false, updatable = false)
	public Item getItemByIid() {
		return this.itemByIid;
	}

	public void setItemByIid(Item itemByIid) {
		this.itemByIid = itemByIid;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "related_iid", nullable = false, insertable = false, updatable = false)
	public Item getItemByRelatedIid() {
		return this.itemByRelatedIid;
	}

	public void setItemByRelatedIid(Item itemByRelatedIid) {
		this.itemByRelatedIid = itemByRelatedIid;
	}

	@Column(name = "require_check", nullable = false)
	public Boolean getRequireCheck() {
		return this.requireCheck;
	}

	public void setRequireCheck(Boolean requireCheck) {
		this.requireCheck = requireCheck;
	}

	@Column(name = "is_link")
	public Boolean getIslink() {
		return this.isLink;
	}

	public void setIslink(Boolean isLink) {
		this.isLink = isLink;
	}

}
